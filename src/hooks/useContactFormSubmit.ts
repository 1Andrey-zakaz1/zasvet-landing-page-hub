
import { useState } from "react";
import { toast } from "@/hooks/use-toast";
import { sendEmail, LeadData } from "@/utils/erpNextApi";

export const useContactFormSubmit = () => {
  const [isSubmitting, setIsSubmitting] = useState(false);

  const submitForm = async (data: LeadData, onSuccess: () => void) => {
    console.log("üéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –•—É–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ä–º—ã");
    console.log("üéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data);
    console.log("‚è∞ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:", new Date().toISOString());
    
    setIsSubmitting(true);

    try {
      console.log("üìß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –ø–æ email...");
      const result = await sendEmail(data);
      
      console.log("üéâ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
      console.log("üìã –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –†–µ–∑—É–ª—å—Ç–∞—Ç:", result);
      console.log("‚è∞ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –í—Ä–µ–º—è —É—Å–ø–µ—Ö–∞:", new Date().toISOString());
      
      toast({
        title: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞",
        description: result.message,
      });
      
      console.log("üéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –í—ã–∑—ã–≤–∞–µ–º onSuccess callback");
      onSuccess();
      
    } catch (error) {
      console.log("üí• –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–æ–π–º–∞–Ω–∞ –æ—à–∏–±–∫–∞ –≤ —Ö—É–∫–µ:", error);
      console.log("‚è∞ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –í—Ä–µ–º—è –æ—à–∏–±–∫–∏:", new Date().toISOString());
      
      toast({
        title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 383 312-00-91",
        variant: "destructive",
      });
      
    } finally {
      console.log("üéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ä–º—ã");
      console.log("‚è∞ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:", new Date().toISOString());
      setIsSubmitting(false);
    }
  };

  return {
    isSubmitting,
    submitForm
  };
};
