export interface LeadData {
  name: string;
  phone: string;
  email?: string;
  message?: string;
}

export interface EmailResponse {
  success: boolean;
  message: string;
}

export interface ERPNextLeadRequest {
  first_name: string;
  mobile_no?: string;
  email_id?: string;
  title?: string;
  source?: string;
  status?: string;
  territory?: string;
  company?: string;
  blog_subscriber?: number;
}

export interface ERPNextResponse {
  data?: {
    name: string;
    lead_owner?: string;
    territory?: string;
    status?: string;
  };
  message?: string;
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
export const testERPNextConnection = async (): Promise<{ success: boolean; details: string }> => {
  const erpUrl = "https://erp.pkzasvet.ru";
  const apiKey = "21c69324f115682";
  const apiSecret = "f60fe9bdacf6644";
  
  console.log("üîç –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê API –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø");
  console.log("=" .repeat(50));
  console.log("üîó –¶–µ–ª–µ–≤–æ–π URL:", erpUrl);
  console.log("üåê –¢–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω:", window.location.origin);
  console.log("üïê –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:", new Date().toISOString());
  
  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤–æ–æ–±—â–µ –æ—Ç–≤–µ—á–∞–µ—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
    console.log("\n1Ô∏è‚É£ –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ (–ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å)");
    
    try {
      // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
      const simpleResponse = await fetch(`${erpUrl}/api/method/ping`, {
        method: "GET",
        mode: 'no-cors' // –ü–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ CORS –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
      });
      
      console.log("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (no-cors —Ä–µ–∂–∏–º)");
      console.log("üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:", simpleResponse.status);
      console.log("üì° –¢–∏–ø –æ—Ç–≤–µ—Ç–∞:", simpleResponse.type);
      
    } catch (noCorsError) {
      console.log("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–∞–∂–µ –≤ no-cors —Ä–µ–∂–∏–º–µ:", noCorsError);
      return {
        success: false,
        details: `–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${noCorsError instanceof Error ? noCorsError.message : String(noCorsError)}`
      };
    }
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∏–º CORS —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    console.log("\n2Ô∏è‚É£ –¢–ï–°–¢: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π CORS –∑–∞–ø—Ä–æ—Å");
    
    const minimalResponse = await fetch(`${erpUrl}/api/method/ping`, {
      method: "GET",
      mode: 'cors',
      credentials: 'omit',
      headers: {
        'Accept': 'application/json'
      }
    });
    
    console.log("‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π CORS –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω");
    console.log("üì° –°—Ç–∞—Ç—É—Å:", minimalResponse.status);
    console.log("üì° –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:");
    for (const [key, value] of minimalResponse.headers.entries()) {
      console.log(`    ${key}: ${value}`);
    }
    
    const minimalText = await minimalResponse.text();
    console.log("üì° –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:", minimalText.substring(0, 200));
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∏–º OPTIONS –∑–∞–ø—Ä–æ—Å (preflight)
    console.log("\n3Ô∏è‚É£ –¢–ï–°–¢: OPTIONS preflight –∑–∞–ø—Ä–æ—Å");
    
    const optionsResponse = await fetch(`${erpUrl}/api/method/ping`, {
      method: "OPTIONS",
      mode: 'cors',
      credentials: 'omit',
      headers: {
        'Access-Control-Request-Method': 'GET',
        'Access-Control-Request-Headers': 'Content-Type, Authorization'
      }
    });
    
    console.log("üì° OPTIONS —Å—Ç–∞—Ç—É—Å:", optionsResponse.status);
    console.log("üì° OPTIONS –∑–∞–≥–æ–ª–æ–≤–∫–∏:");
    for (const [key, value] of optionsResponse.headers.entries()) {
      console.log(`    ${key}: ${value}`);
    }
    
    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∏–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    console.log("\n4Ô∏è‚É£ –¢–ï–°–¢: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å");
    
    const authHeaders = {
      "Authorization": `token ${apiKey}:${apiSecret}`,
      "Accept": "application/json",
      "Content-Type": "application/json"
    };
    
    const authResponse = await fetch(`${erpUrl}/api/method/frappe.auth.get_logged_user`, {
      method: "GET",
      headers: authHeaders,
      mode: 'cors',
      credentials: 'omit'
    });
    
    console.log("üîê Auth —Å—Ç–∞—Ç—É—Å:", authResponse.status);
    const authText = await authResponse.text();
    console.log("üîê Auth –æ—Ç–≤–µ—Ç:", authText);
    
    if (authResponse.ok) {
      console.log("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!");
      return {
        success: true,
        details: `–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã. –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω, CORS —Ä–∞–±–æ—Ç–∞–µ—Ç, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è OK.`
      };
    } else {
      return {
        success: false,
        details: `–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –°—Ç–∞—Ç—É—Å: ${authResponse.status}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á–∏.`
      };
    }

  } catch (error) {
    console.log("üí• –û–®–ò–ë–ö–ê –í –†–ê–°–®–ò–†–ï–ù–ù–û–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–ï");
    console.log("üí• –¢–∏–ø –æ—à–∏–±–∫–∏:", typeof error);
    console.log("üí• –ù–∞–∑–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:", error instanceof Error ? error.name : "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ");
    console.log("üí• –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:", error instanceof Error ? error.message : String(error));
    
    if (error instanceof Error) {
      const errorMessage = error.message.toLowerCase();
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
      if (errorMessage.includes('failed to fetch')) {
        return {
          success: false,
          details: `CORS –ë–õ–û–ö–ò–†–û–í–ö–ê: –ë—Ä–∞—É–∑–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∑–∞–ø—Ä–æ—Å –∏–∑-–∑–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ CORS. 
          
–†–ï–®–ï–ù–ò–Ø:
1. –î–æ–±–∞–≤—å—Ç–µ –¥–æ–º–µ–Ω "${window.location.origin}" –≤ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ERPNext
2. –ò–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ "*" –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤ (–≤—Ä–µ–º–µ–Ω–Ω–æ)
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ System Settings ‚Üí CORS –∏–ª–∏ Website Settings
4. –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É, –¥–æ–±–∞–≤—å—Ç–µ –≤ site_config.json –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS

–¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${error.message}`
        };
      }
      
      if (errorMessage.includes('network')) {
        return {
          success: false,
          details: `–°–ï–¢–ï–í–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É ${erpUrl}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞.`
        };
      }
    }
    
    return {
      success: false,
      details: `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: ${error instanceof Error ? error.message : String(error)}`
    };
  }
};

export const sendEmail = async (data: LeadData): Promise<EmailResponse> => {
  console.log("üéØ ERPNext API: –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏");
  console.log("üéØ ERPNext API: –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data);
  
  // –û—á–∏—â–∞–µ–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
  const cleanData = {
    name: String(data.name || '').trim(),
    phone: String(data.phone || '').trim(),
    email: data.email ? String(data.email).trim() : '',
    message: data.message ? String(data.message).trim() : ''
  };
  
  console.log("üéØ ERPNext API: –û—á–∏—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", cleanData);
  
  if (!cleanData.name || !cleanData.phone) {
    throw new Error("–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è");
  }
  
  // –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ERPNext API
  const erpUrl = "https://erp.pkzasvet.ru";
  const apiKey = "21c69324f115682";
  const apiSecret = "f60fe9bdacf6644";
  
  console.log("üéØ ERPNext API: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ");
  console.log("üéØ ERPNext API: URL:", erpUrl);
  
  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Communication –¥–æ–∫—É–º–µ–Ω—Ç–∞
  const communicationData = {
    doctype: "Communication",
    communication_type: "Communication", 
    content: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞:

–ò–º—è: ${cleanData.name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${cleanData.phone}
Email: ${cleanData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–°–æ–æ–±—â–µ–Ω–∏–µ: ${cleanData.message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏: ${new Date().toLocaleString('ru-RU')}`,
    sender: cleanData.email || "website@pkzasvet.ru",
    sender_full_name: cleanData.name,
    phone_no: cleanData.phone,
    subject: `–ó–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ –æ—Ç ${cleanData.name}`,
    communication_medium: "Website",
    sent_or_received: "Received",
    status: "Open"
  };
  
  console.log("üéØ ERPNext API: –î–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:", communicationData);
  
  try {
    console.log("üì§ ERPNext API: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...");
    
    const response = await fetch(`${erpUrl}/api/resource/Communication`, {
      method: "POST",
      headers: {
        "Authorization": `token ${apiKey}:${apiSecret}`,
        "Accept": "application/json",
        "Content-Type": "application/json"
      },
      mode: 'cors',
      credentials: 'omit',
      body: JSON.stringify(communicationData)
    });
    
    console.log("üì° ERPNext API: –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:", response.status);
    console.log("üì° ERPNext API: Status text:", response.statusText);
    
    const responseText = await response.text();
    console.log("üì° ERPNext API: –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", responseText);
    
    if (response.ok) {
      console.log("‚úÖ ERPNext API: –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!");
      
      let responseData;
      try {
        responseData = JSON.parse(responseText);
        console.log("‚úÖ ERPNext API: Parsed data:", responseData);
      } catch (e) {
        console.log("‚úÖ ERPNext API: –û—Ç–≤–µ—Ç –Ω–µ JSON, –Ω–æ —Å—Ç–∞—Ç—É—Å OK");
      }
      
      return {
        success: true,
        message: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ CRM —Å–∏—Å—Ç–µ–º—É! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
      };
    } else {
      console.error("‚ùå ERPNext API: –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
      console.error("‚ùå ERPNext API: –°—Ç–∞—Ç—É—Å:", response.status);
      console.error("‚ùå ERPNext API: –û—Ç–≤–µ—Ç:", responseText);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–Ω—è—Ç—å –æ—à–∏–±–∫—É –∏–∑ –æ—Ç–≤–µ—Ç–∞
      let errorMessage = "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É";
      try {
        const errorData = JSON.parse(responseText);
        if (errorData.message) {
          errorMessage = errorData.message;
        } else if (errorData.exc) {
          errorMessage = "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ CRM";
        }
      } catch (e) {
        // –ï—Å–ª–∏ –Ω–µ JSON, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      }
      
      throw new Error(`ERPNext API Error: ${response.status} - ${errorMessage}`);
    }
    
  } catch (error) {
    console.error("üí• ERPNext API: –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:", error);
    
    if (error instanceof Error) {
      console.error("üí• ERPNext API: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:", error.message);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
      if (error.message.includes('Failed to fetch') || error.message.includes('CORS')) {
        throw new Error("CORS_ERROR: –ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ CRM —Å–µ—Ä–≤–µ—Ä—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
      }
      
      if (error.message.includes('401') || error.message.includes('403')) {
        throw new Error("AUTH_ERROR: –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ CRM —Å–∏—Å—Ç–µ–º–µ.");
      }
      
      if (error.message.includes('404')) {
        throw new Error("API_ERROR: CRM API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.");
      }
      
      if (error.message.includes('500')) {
        throw new Error("SERVER_ERROR: –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ CRM —Å–µ—Ä–≤–µ—Ä–∞.");
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞—à–∞ –∫–∞—Å—Ç–æ–º–Ω–∞—è –æ—à–∏–±–∫–∞, –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
      if (error.message.includes('ERPNext API Error:')) {
        throw error;
      }
    }
    
    console.error("üí• ERPNext API: –ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞");
    throw new Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –≤ CRM —Å–∏—Å—Ç–µ–º—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 383 312-00-91");
  }
};

